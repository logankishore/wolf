name: Python Package using Conda

on:

  pull_request:

    branches:

      - master

      - staging

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: 3.10
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda env update --file environment.yml --name base
    - name: Lint with flake8
      run: |
        conda install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        conda install pytest
        pytest
	- name: Gitleaks Scanner
  # You may pin to the exact commit or the version.
  # uses: DariuszPorowski/github-action-gitleaks@f62001e31a051e400217883d0a40e4a9b8d3eaab
  uses: DariuszPorowski/github-action-gitleaks@v2.0.5
  with:
    # Path to source (relative to $GITHUB_WORKSPACE) (default: $GITHUB_WORKSPACE)
    source: # optional
    # Config file path (relative to $GITHUB_WORKSPACE) (default build-in: /.gitleaks/UDMSecretChecks.toml)
    config: # optional, default is /.gitleaks/UDMSecretChecks.toml
    # Report file format: json, csv, sarif (default: json)
    report_format: # optional, default is json
    # Treat git repos as plain directories and scan those file
    no_git: # optional
    # Redact secrets from logs and stdout (default: true)
    redact: # optional, default is true
    # Fail if secrets founded (default: true)
    fail: # optional, default is true
    # Show verbose output from scan (default: true)
    verbose: # optional, default is true
    # Log level (debug, info, warn, error, fatal) (default: info)
    log_level: # optional, default is info
